#+INCLUDE: "../../../common/header.org"
#+TITLE: Usuarios, privilegios y roles de *Oracle*
# #+OPTIONS: reveal_single_file:nil


* Introducción
- Oracle puede utilizarse simultáneamente por varios procesos y clientes
- Cada uno puede tener distintos permisos y capacidades
  - Espacio de disco disponible
  - Gasto en CPU, red
  - Acceso a diferentes tablas de datos

* /Tablespaces/
- *Oracle* almacena datos en los /tablespaces/
  - Conjuntos de ficheros
  - Normas para su tamaño: inicial, máximo, crecimiento
- Cada tablespace puede usarse para diferentes funciones
  - Datos de usuario
  - Datos de recuperación
  - Datos del sistema
  - Datos temporales

** /Tablespaces/ por defecto
- Por defecto, *Oracle* crea en una nueva base de datos
  - =users=: Tablespace asignado por defecto para los datos de todos los usuarios
  - =system=: Datos acerca de la instancia y del diccionario de datos
  - =sysaux=: Operaciones temporales del administrador que no caben en memoria
  - =undo= (=undotbs1=): Datos para deshacer las transacciones (=rollback=)
  - =temp=: Operaciones temporales de usuarios que no caben en memoria

-----
Mas información en:
- https://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_7003.htm
- https://docs.oracle.com/cd/B19306_01/server.102/b14220/physical.htm

** Crear un /tablespace/
#+begin_src sql
CREATE TABLESPACE nombre 
  DATAFILE '/camino/al/fichero.dbf'
  SIZE tamanoinicial
  AUTOEXTEND ON NEXT 200k MAXSIZE 1400K
  DEFAULT STORAGE (INITIAL 16k NEXT 16k MINEXTENTS 1 MAXEXTENTS 3);
#+end_src

** ¿Por qué es tan complicado?
- Esta flexibilidad permite:
  - Que cada usuario tenga sus /tablespaces/
  - Que cada /tablespace/ esté en discos distintos (rapidez)
  - Que un /tablespace/ se localice en varios discos (rapidez, tamaño)
  - Mover /tablespaces/ una vez creados

* Usuarios
¿Qué usuario hemos utilizado con =sqlplus= hasta ahora?

#+reveal: split
- *Oracle* tiene dos modos de autentificar usuarios
  - Autentificación de sistema operativo
  - Autentificación con seguridad nativa de *oracle*
- Al instalarlo, elegimos que el grupo =wheel= era administrador

** Creación de usuarios
#+begin_src sql
CREATE USER usuario IDENTIFIED BY contrasena
  DEFAULT TABLESPACE tablespace
  TEMPORARY TABLESPACE tablespace
  QUOTA UNLIMITED ON tablespace
  QUOTA tamano ON tablespace
  ACCOUNT LOCK
  ACCOUNT UNLOCK
#+end_src

** Modificación de usuario
- Modificación de un usuario ya creado
  #+begin_src sql
  ALTER USER usuario
    cualquier opcion valida al crear usuario
  #+end_src

- Borrado de usuario
  #+begin_src sql
  DROP USER usuario
  #+end_src




* Privilegios
- Cada usuario puede tener unos permisos distintos
- Ya hemos visto dos permisos
  - En qué /tablespaces/ se puede escribir 
  - Cuántos datos se pueden escribir en esos /tablespaces/
  - Si una cuenta está bloqueada
- Pero hay más permisos
  - Veremos los /privilegios/ de *Oracle*



** Privilegios de *Oracle*
|   | Privilegio                       | Objeto sobre el que se aplica                   |
|---+----------------------------------+-------------------------------------------------|
| / | <>                               | <>                                              |
|   | =Create, alter, drop=            | =Table, sequence, view, user, synonym, session= |
|   | =select, update, delete, insert= | Sobre campos de tablas y filas                  |

** Sintaxis de =Grant=

#+begin_src sql
grant PRIVILEGIO1,PRIVILEGIO2,...,PRIVILEGION 
on OBJETO
to USUARIO
with grant option;
#+end_src

#+begin_src sql
create table alumnos(...);
create user profesor ...;
grant select on alumnos to profesor;
#+end_src


[[https://docs.oracle.com/database/121/TTSQL/privileges.htm#TTSQL339][Fuente: docs.oracle.com]]

** Ejercicio
- Crea un usuario =LIMITADO=
  - Utilízalo para crear una tabla =DATOS(TEXTO varchar2(255)),numero integer)=
- Crea un usuario =CONPERMISOS=
- Haz que =LIMITADO= de privilegios a =CONPERMISOS= para que:
  - Pueda leer todos los campos de la tabla =DATOS=
  - Pueda actualizar el campo =NUMERO= de tabla =DATOS=
  - Pero no pueda modificar el campo =TEXTO=, ni borrar filas, ni insertar filas

#+BEGIN_NOTES
grant update(column-name) on table-name to user-name
#+END_NOTES

** Ejercicio
- Haz que el usuario =LIMITADO= tenga una cuota de 100k en el tablespace =USERS=
- Llena toda su cuota insertando filas en la tabla =DATOS=
- ¿Qué ocurre?

#+BEGIN_NOTES
create user limitado identified by limitado;
grant resource,connect to limitado;
alter user limitado quota 100k on users;

connect limitado/limitado

create table datos(texto varchar2(255),numero integer);
insert into datos(texto) values('En un lugar de la Mancha de cuyo nombre no quiero acordarme');
insert into datos(texto) values('En un lugar de la Mancha de cuyo nombre no quiero acordarme');
insert into datos(texto) values('En un lugar de la Mancha de cuyo nombre no quiero acordarme');
insert into datos(texto) values('En un lugar de la Mancha de cuyo nombre no quiero acordarme');
insert into datos(texto) values('En un lugar de la Mancha de cuyo nombre no quiero acordarme');
commit;

ORA-01536: space quota exceeded for tablespace 'USERS'

#+END_NOTES

** Quitar privilegios
- Los privilegios se quitan con =revoke=
- Cuando un usuario pierde un privilegio, los pierden también todos los que recibieron el mismo privilegio a través de él
  - Por la cláusula =with grant option=

#+begin_src sql
connect sys/*******
grant select on unatabla to unusuario with grant option;

connect unusuario/*******
grant select on unatabla to otrousuario;

connect sys/*******
revoke select on unatabla to unusuario;

-- AQUI NI unusuario NI otrousuario TIENEN PRIVILEGIO SOBRE unatabla
#+end_src

* Roles
- Asignar todos los privilegios a un usuario es trabajoso, pero factible
- ¿Qué ocurre si tenemos que manejar a muchos usuario?
- Los *roles* permiten dar nombre a un grupo de privilegios
  - Se pueden asignar privilegios a un rol
  - Y después asignar ese rol a varios usuarios

** Sintaxis de roles
#+begin_src sql
create role NOMBREROL;
grant PRIVILEGIOS on OBJETOS to NOMBREROL;
grant NOMBREROL to USUARIO;
#+end_src

[[https://docs.oracle.com/cd/B10501_01/server.920/a96521/privs.htm][Fuente: docs.oracle.com]]

** Ejercicio
- Imagina que
  1. Creas un rol con sus permisos
  2. Le asignas privilegios
  3. Lo asignas al usuario =USUARIOANTES=
  4. Quitas algún privilegio del rol
  5. Asignas el rol al usuario =USUARIODESPUES=
- El usuario =USUARIODESPUES=, ¿tiene más, menos o los mismos privilegios que =USUARIOANTES=?
  - O lo que es lo mismo, ¿los permisos del rol se /copian/ al usuario o se /enlazan/?

#+BEGIN_NOTES
create role ELROL;
grant resource, connect to ELROL;
grant select on LIMITADO.DATOS to ELROL;
create user usuarioantes identified by u;
grant ELROL to usuarioantes;
revoke select on LIMITADO.DATOS from ELROL;
create user usuariodespues identified by u;
grant ELROL to usuariodespues;
#+END_NOTES

* Perfiles

- Un /profile/ es un conjunto de limitaciones sobre el sistema *Oracle*
- No limita acceso a datos, sino al propio SGBD y sistema operativo


** Creación de perfiles
#+begin_src sql
CREATE PROFILE nombreperfil LIMIT 
   SESSIONS_PER_USER          UNLIMITED 
   CPU_PER_SESSION            UNLIMITED 
   CPU_PER_CALL               3000 
   CONNECT_TIME               45 
   IDLE_TIME                 300
   LOGICAL_READS_PER_SESSION  DEFAULT 
   LOGICAL_READS_PER_CALL     1000 
   PRIVATE_SGA                15K
   COMPOSITE_LIMIT            5000000; 

ALTER SYSTEM SET resource_limit = TRUE scope = BOTH 
#+end_src

- Nota: Según la funente, los tiempos se miden en días. Se pueden especificar fracciones de día.
  - Pero a mí me funcionan como minutos 

[[https://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_6010.htm][Fuente: docs.oracle.com]]

** Asignación de perfil a un usuario
- En la creación (=create user=), o posteriormente
  #+begin_src sql
  alter user USUARIO profile NOMBREDEPERFIL
  #+end_src

** Ejercicio
- Haz que el usuario =LIMITADO= 
  - se quede sin sesión tras 1 minuto de inactividad
  - se quede sin sesión a los 2 minutos de conectarse, aunque no haya estado inactivo

#+BEGIN_NOTES
drop profile limitado cascade;
create profile limitado limit idle_time 1 connect_time 2;
alter user limitado profile limitado;

ERROR at line 1:
ORA-02396: exceeded maximum idle time, please connect again


#+END_NOTES



* Referencias
- Formatos:
  - [[file:asgbd-1-usuarios-privilegios-roles.html][Transparencias]] 
  - [[file:asgbd-1-usuarios-privilegios-roles.pdf][PDF]]
  - [[https://github.com/alvarogonzalezsotillo/apuntes-clase][Github]]
- Creado con:
  - [[https://www.gnu.org/s/emacs/][Emacs]]
  - [[https://github.com/yjwen/org-reveal][org-reveal]]
  - [[https://www.latex-project.org/][Latex]]
- [[mailto:alvaro.gonzalezsotillo@educa.madrid.org][Por Álvaro González]]
