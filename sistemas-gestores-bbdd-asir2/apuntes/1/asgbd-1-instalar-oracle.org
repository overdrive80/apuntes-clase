#+INCLUDE: "../../../common/header.org"
#+TITLE:  Instalación de Oracle

* problemas ova 52 en 50 :noexport:
Problema con Virtualbox
- El 5.2 hace ova que no se descomprime con 5.0 ni con tar
- Instalo 5.2 -> instalo ova -> instalo 5.0
- Hago ova y lo paso

#+begin_src sh

sudo apt remove --purge virtualbox-*
sudo apt remove --purge virtualbox
sudo apt remove --purge virtualbox-5.2
sudo dpkg -P virtualbox-dkms
sudo apt install virtualbox-5.2


#wget http://download.virtualbox.org/virtualbox/5.2.18/virtualbox-5.2_5.2.18-124319~Ubuntu~trusty_amd64.deb
#sudo dpkg -i virtualbox-5.2_5.2.18-124319~Ubuntu~trusty_amd64.deb 
#/sbin/vboxconfig
#sudo /etc/init.d/vboxdrv setup 


#sudo apt update
#sudo apt install virtualbox

#+end_src





* Instalación del software de base de datos

** Prerequisitos
- Será una máquina virtual de VirtualBox
- El fichero =OVA= del profesor ya tiene:
  - *Centos 7* instalado (inglés)
  - *Oracle 12c y 18c* descargado
- En otros sistemas operativos (*Fedora*) hay un [[https://patrickhurley.wordpress.com/2015/11/30/freeze-of-oracle-dbca-and-startup-nomount-running-on-linux-on-virtualbox-5/][problema con Virtual Box y la paravirtualización]]


** Resolver el propio nombre
- Cambiar el nombre de la máquina 
  - Por ejemplo =nombrealumnoASGBD=
  - Fichero =/etc/hostname=
  - Fichero =/etc/hosts=: Hay que añadir el nombre de la máquina en 
    - =127.0.0.1=
    - =::1=
- Reiniciar la máquina

** Antes de empezar :noexport:
- Para Fedora y 11g
- Necesitamos varios componentes de Linux.
  - Su firma ([[https://docs.oracle.com/cd/E52668_01/E39381/html/ol_import_gpg.html]])

#+begin_src sh
wget http://public-yum.oracle.com/RPM-GPG-KEY-oracle-ol7
rpm --import ./RPM-GPG-KEY-oracle-ol7
#+end_src

  - Instalación

#+begin_src sh
cd /etc/yum.repos.d/
wget http://public-yum.oracle.com/public-yum-ol7.repo
yum install oracle-rdbms-server-11gR2-preinstall
yum update --skip-broken
#+end_src

(referencia em https://oracle-base.com/blog/2015/03/26/oracle-linux-7-1-preinstall-packages-available-for-11gr2-and-12cr1/)

** Antes de empezar :noexport:
- Actualizar los repositorios Centos

#+begin_src sh
sudo yum clean all # Reinicia los repositorios
wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-10.noarch.rpm # nos bajamos un repositorio extra
rpm -ihv epel-release-7-10.noarch.rpm # instalamos ese repositorio
sudo yum update #opcional, puede necesitar mucho tiempo
#+end_src


** Oracle 18c

*** Descomprimir el instalador
 - Descomprimiremos sus ficheros en el directorio =$HOME/oracle-install-18c=
   - Sugerencia: línea de comandos =unzip=
   - Directorio =$HOME/oracle-install/=
   - Fichero: =LINUX.X64_180000_db_home.zip= 
 - Para hacer sitio, podemos borrar los ficheros =zip= una vez descomprimidos

*** Arrancar el instalador
 1. Se arranca con =./runInstaller=
 2. Instalar sólo el /software/ de la base de DATOS
 3. Elegir /Single instance database/
 5. Edición Enterprise

*** Directorios de Oracle
 Dejamos los directorios por defecto:
 - Oracle Base: =/home/alumno/oracle-18c=
 - /Software/ en =/home/alumno/oracle-install-18c=
 - /Inventory/ en =/home/alumno/oraInventory=
   - Dejamos el grupo a =alumno=

*** Grupos de /Linux/

 - Elegir =wheel= 
   - Es un grupo administrador en *Centos*
   - El usuario =alumno= ya pertenece a él 

*** Comprobaciones
 - Ignoramos la falta de memoria
 - El instalador detectará algunos errores, pero genera unos /scripts/ de /fix/
   - Son parámetros del /kernel/ de Linux
   - Los /scripts/ se ejecutan como administrador

 - Se necesitan instalar varios paquetes de software
   - =sudo yum install= /=paquete=/
   - Es necesario que la máquina virtual tenga acceso a internet (debería estar en /Bridged/, pero también funciona /NAT/)

 #+BEGIN_NOTES
sudo yum install compat-libcap1 libstdc++-devel gcc-c++ ksh libaio-devel compat-libstdc++-33-3.2.3

 #+END_NOTES

*** Resumen
 - Se debe grabar la información de la hoja de resumen

 [[file:media/response-file-18c.png]]

*** /scripts/ de configuración
- /home/alumno/oraInventory/orainstRoot.sh

#+begin_src sh
[alumno@centos7 oraInventory]$ sudo ./orainstRoot.sh 
[sudo] password for alumno: 
Changing permissions of /home/alumno/oraInventory.
Adding read,write permissions for group.
Removing read,write,execute permissions for world.

Changing groupname of /home/alumno/oraInventory to alumno.
The execution of the script is complete.
#+end_src


- /home/alumno/oracle-install-18c/root.sh

#+begin_src sh
[alumno@centos7 oracle-install-18c]$ sudo ./root.sh
Performing root user operation.

The following environment variables are set as:
    ORACLE_OWNER= alumno
    ORACLE_HOME=  /home/alumno/oracle-install-18c

Enter the full pathname of the local bin directory: [/usr/local/bin]: 
   Copying dbhome to /usr/local/bin ...
   Copying oraenv to /usr/local/bin ...
   Copying coraenv to /usr/local/bin ...


Creating /etc/oratab file...
Entries will be added to the /etc/oratab file as needed by
Database Configuration Assistant when a database is created
Finished running generic part of root script.
Now product-specific root actions will be performed.
Do you want to setup Oracle Trace File Analyzer (TFA) now ? yes|[no] : 

Oracle Trace File Analyzer (TFA - Non Daemon Mode) is available at :
    /home/alumno/oracle-install-18c/suptools/tfa/release/tfa_home/bin/tfactl

Note :
1. tfactl will use TFA Daemon Mode if TFA already running in Daemon Mode and user has access to TFA
2. tfactl will configure TFA Non Daemon Mode only if user has no access to TFA Daemon mode or TFA Daemon mode is not installed

OR

Oracle Trace File Analyzer (TFA - Daemon Mode) can be installed by running this script :
    /home/alumno/oracle-install-18c/suptools/tfa/release/tfa_home/install/roottfa.sh
#+end_src


*** Finalización
 - Necesitamos definir algunas variables de entorno (ficheros =~/.profile=, =~/.bash_profile=, =~/.bashrc=)
   - =ORACLE_HOME=: =/home/alumno/oracle-install-18c=
   - Incluir =$ORACLE_HOME/bin= en el =PATH=
 - También se puede usar [[http://www.orafaq.com/wiki/Oraenv][el comando =oraenv=]] para definir estas variables

*** Reiniciar
 - En un servidor real no se hace, pero aquí es lo más cómodo para que funcionen las nuevas variables de entorno
 - Después, podemos ver que los programas están, *pero no hacen nada*
 #+BEGIN_SRC sh
 [alumno@fedora-64-26 ~]$ sqlplus / as sysdba

 SQL*Plus: Release 12.1.0.2.0 Production on Thu Sep 14 11:58:09 2017

 Copyright (c) 1982, 2014, Oracle.  All rights reserved.

 ERROR:
 ORA-12162: TNS:net service name is incorrectly specified


 Enter user-name: 
 #+END_SRC


* Instancia / /listener/ / base de datos
- Instancia: 
  - Varios procesos funcionando
  - Permite manipular *una* o *varias* base de datos (En /Oracle/ solo una)

- Base de datos 
  - Varios *ficheros*
  - Contienen datos, índices, esquema,...

- Listener
  - Proceso que admite *conexiones* de clientes
  - En otros SGBD (/MySQL/) la instancia es su propio /listener/
  - Conecta los clientes con la instancia pedida

** Instancias y bases de DATOS

[[file:diagrama-instancias-bbdd.png]]

** Ejemplo (I) de listener

[[file:cliente-listener-instancia.png]]


** Ejemplo (II) de listener

[[file:cliente-listener-instancia-complejo.png]]





* Creación de una instancia de base de datos

- Comando =dbca=
- No estará en el =PATH= si no se ha incluido (por ejemplo, con =oraenv=)
- Utilizad la configuración típica
  - Nombre: =asir=
  - Que no sea una /container database/
  - Recordad la contraseña 
- Guardad la información de la página de resumen (por si acaso)

** /Password management/
- Lista de usuarios
- Se puede
  - Bloquearse o desbloquearse
  - Cambiar su contraseña

** Paravirtualización :noexport:
- =dbca= se puede colgar si la paravirtualización está a algún valor que no sea =none=

    

* Creación de un /listener/ 
- Permiten las conexiones de clientes remotos
- Comando =netca=
  - /Listener configuration/
  - Nombre del listener: =LISTENER=
  - Protocolo /TCP/
  - Puerto =1521=
- Comprobar la configuración creada en el fichero =listener.ora=
  - Si luego falla, revisar =ADR_BASE_LISTENER=

** Arrancar y parar el listener
- Arrancar:
  #+begin_src sh
  lsnrctl start
  #+end_src
- Parar:
  #+begin_src sh
  lsnrctl stop
  #+end_src
- Comprobar si la instancia se ha conectado
  #+begin_src sh
  lsnrctl status
  #+end_src



* Arrancar y parar la base de datos

- Se necesitan las variables =ORACLE_HOME=, =ORACLE_SID=, =PATH=, =ORACLE_BASE=.
  - Se definen *manualmente* con ayuda del script =oraenv=:
  #+begin_src sh
  source oraenv
  #+end_src
- Arrancar y parar la base de datos
  #+begin_src sh
  dbstart $ORACLE_HOME
  dbshut $ORACLE_HOME
  #+end_src
- Arrancar y parar el /listener/. Comprobar que se admiten conexiones
  #+begin_src sh
  lsnrctl start
  lsnrctl stop
  lsnrctl status
  #+end_src

** A mí *dbstart* y *dbshut* no me funcionan

Se puede hacer /a mano/. Lo veremos en el próximo tema.

#+begin_src sh
[alumno@centos7 ~]$ export ORACLE_SID=asir
[alumno@centos7 ~]$ sqlplus / as sysdba

SQL*Plus: Release 12.1.0.2.0 Production on Tue Sep 19 10:40:54 2017

Copyright (c) 1982, 2014, Oracle.  All rights reserved.

Connected to an idle instance.

SQL> startup open
ORACLE instance started.

Total System Global Area 1207959552 bytes
Fixed Size                  2923776 bytes
Variable Size             822084352 bytes
Database Buffers          369098752 bytes
Redo Buffers               13852672 bytes
Database mounted.
Database opened.
SQL> 
#+end_src



* Conexión en local
- Después de la creación de un /listener/ y una instancia, ya podemos conectarnos a la base de datos
- Recordatorio: Debemos tener configuradas las variabales de entorno
  - =ORACLE_SID= : el nombre que de la base de datos (=asir=)
  - =PATH= : debe incluir =$ORACLE_HOME/bin=
  - Se pueden poner también con =oraenv=

#+BEGIN_SRC sh
sqlplus / as sysdba  
#+END_SRC
    



* Conexión remota

** Acceso por redes
- Es necesario conocer la IP de nuestro servidor
  - =ifconfig=
  - =hostname -I=
- Es necesario que el ordenador cliente pueda acceder al servidor
  - Tipo de conexión de la máquina virtual: mejor /bridged/
  - =ping=
  - /Firewall/: =systemctl disable firewalld=


*** Conexión remota
- Es necesario conocer la IP o el nombre del ordenador remoto
- Si nos fiamos de =DHCP=, cada día puede ser una IP distinta
- Es mejor usar un *nombre*
  - DNS: muy difícil
  - Nombres netbios de Windows
  - Nombres zeroconf/avahi de Linux/Mac (*preferido*)

*** avahi 
- Instalar =avahi= y =avahi-tools=
- Activar opciones =publish-hinfo= y =publish-workstation=
- Desactivar el firewal
- Importante: el nombre afecta al fichero =listener.ora=
- El nombre de red será el que tengamos más =.local=
  - Por ejemplo, =profebd.local=
- Con esto un windows puede encontrar a un linux
  - Para que Linux encuentre a otro linux, hay que cambiar =/etc/nsswitch.conf=
  - En *Centos*, hay que instalar =nss_mdns=

*** Samba 
- [[https://www.howtoforge.com/samba-server-installation-and-configuration-on-centos-7]]
  - =sudo yum install samba samba-client samba-common=
  - =systemctl enable smb.service=
  - =systemctl enable nmb.service=
  - Cambiar el fichero =smb.conf=, el =netbios name=
    - *Ojo*: máximo 15 caracteres, sin guiones
- Importante: el nombre afecta al fichero =listener.ora=


** Configuración de las conexiones (*sqlplus*) :noexport:
- El cliente =sqlplus= utiliza las conexiones definidas en el
 fichero =tnsnames.ora=
- Con el comando =netca=
  - Elegir los nombres locales (/Local net service name configuration/)


** Acceso via Web
- Al crear la base de datos con =dbca= se configura el acceso *Enterprise Manager*
  - URL =https://= *=nombre-o-ip=* =:5500/em/=
- Tenemos *IP* dinámica, por lo que debemos configurar una resolución por nombre 
  - *DNS* es complicado
  - Usaremos *avahi* entre linux, y *samba* entre linux y windows


** Instalación de *sqlplus*
- El cliente *sqlplus* viene en la instalación de *oracle*
- Pero también puede instalarse por separado:
  - http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html
  - http://download.oracle.com/otn/linux/instantclient/122010/instantclient-basic-linux.x64-12.2.0.1.0.zip
  - http://download.oracle.com/otn/linux/instantclient/122010/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip
- Tras descomprimir, hay que definir las variables =ORACLE_HOME= y =LD_LIBRARY_PATH= al directorio de instalación
- Para contectarse:

#+begin_src bash
  sqlplus username/password@host:port/service
  
  sqlplus sys/alumno@centosprofe.local/asir as sysdba
#+end_src


# #+BEGIN_NOTES
See the Instant Client Home Page for more information.

- Installation of ZIP files:
  1. Download the desired Instant Client ZIP files. All installations require the Basic or Basic Light package. 
  2. Unzip the packages into a single directory such as /opt/oracle/instantclient_12_2 that is accessible to your application. For example:
     #+begin_src bash
     cd /opt/oracle			
     unzip instantclient-basic-linux.x64-12.2.0.1.0.zip
     #+end_src
  3. Create the appropriate libclntsh.so and libocci.so links for the version of Instant Client. For example:
     #+begin_src bash  
     cd /opt/oracle/instantclient_12_2
     ln -s libclntsh.so.12.1 libclntsh.so
     ln -s libocci.so.12.1 libocci.so
     #+end_src
  4. Install the libaio package, for example on Oracle Linux, run this as the root user:
     #+begin_src bash  
     yum install libaio
     #+end_src
     On some Linux distributions the package is called libaio1.
  5. Set the environment variable LD_LIBRARY_PATH to the directory created in Step 2, for example:
     #+begin_src bash  
     export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_2:$LD_LIBRARY_PATH
     #+end_src
     Alternatively, add this path to an ldconfig configuration file if there is no other Oracle software that will be impacted.
  6. To use supplied binaries such as SQL*Plus, update your PATH environment variable, for example:
     #+begin_src bash  
     export PATH=/opt/oracle/instantclient_12_2:$PATH
     #+end_src
  7. Start your application.

# #+END_NOTES

** Instalación de *SQLDeveloper* en Centos
- Se necesita *JDK 1.8*
- Se instalan los ficheros =sqldeveloper-4.1.5.21.78-1.noarch.rpm= y =jdk-8u111-linux-x64.rpm=
  - http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
  - http://www.oracle.com/technetwork/developer-tools/sql-developer/downloads/index.html
- Arracar =sqldeveloper= desde la consola
  - Preguntará por el directorio de instalación del JDK

** Instalación de *SQLDeveloper* en Ubuntu
- Se necesita *JDK 1.8*
- Se descarga el fichero  =sqldeveloper-xxxxx-no-jre.zip=
  - http://www.oracle.com/technetwork/developer-tools/sql-developer/downloads/index.html
- Se descomprime y se ejecuta =sqldeveloper.sh=


** Reinicio del servidor :noexport:
- Comprobar =/etc/oratab=
  - Deberá estar configurada para iniciarse con el sistema
- Comprobar que la interfaz de red se inicia en el arranque
  - =/etc/sysconfig/network-scripts=
  - =ONBOOT= debe ser =YES=

* Cosas que hemos aprendido /de pasada/
- Variables de entorno
  - Variable =PATH=
- Conexiones por *ssh*
  - Con redirección del *Xserver*
- Edición de ficheros de texto
- Instalación de paquetes en *Centos*
- Conexiones de red (/bridged/, /NAT/)
- Elevación de permisos con =sudo=
- Descompresión de ficheros *zip*

-----
Nada de esto es /directamente/ bases de datos...

... pero ha sido necesario para instalar *Oracle*

** Comandos
| ~cd~       | Cambia el directorio actual              |
| ~echo~     | Escribe los parámetros pasados           |
| ~df~       | Espacio de disco usado                   |
| ~unzip~    | Descomprime un *zip*                     |
| ~updatedb~ | Actualiza la lista de ficheros del disco |
| ~locate~   | Busca un fichero la lista de =updatedb=  |
| ~ssh~      | Conexión remota                          |
| ~grep~     | Busca líneas con un texto                |
| ~nano~     | Editor de ficheros                       |
| ~netstat~  | Ver conexiones de red                    |
| ~nc~       | Conectarse por TCP o UDP                 |
  
** Comandos, /shell/ y variables 
| ~$variable~     | Valor de una variable (de =export= y =env= )        |
| \vert           | Manda la salida de un programa a la entrada de otro |
| ~$HOME/.bashrc~ | /script/ de inicio del usuario                      |
| ~source~        | Ejecuta un /script/ dentro de la /shell/ actual     |
| ~export~        | Define una variable                                 |
| ~env~           | Lista de variables                                  |
| ~PATH~          | Lista de directorios donde se buscan comandos       |
| ~history~       | Lista de comandos introducidos en la /shell/        |



* Diagrama resumen
#+BEGIN_SRC dot :file diagrama-instalacion-oracle.svg :exports results :cmdline -Tsvg
digraph {
  Descomprimir -> Instalar
  Instalar -> Paquetes_como_root
  Instalar -> Scripts_como_root

  Paquetes_como_root -> Software_instalado
  Scripts_como_root -> Software_instalado
  Software_instalado -> Variables_en_bash

  Software_instalado -> dbca
  Software_instalado -> netca

  Variables_en_bash -> dbca
  Variables_en_bash -> netca


  netca -> Listener_creado
  Listener_creado -> Listener_levantado [label="lsnrctl start"]

  dbca -> Instancia_creada
  Instancia_creada -> Instancia_levantada [label="startup open"]

  Instancia_levantada -> Instancia_conectada [label="Automático"]

  Listener_levantado -> Instancia_conectada

  Instancia_conectada -> 😎 [label="lsnrctl status"]

}
#+END_SRC

#+RESULTS:
[[file:diagrama-instalacion-oracle.svg]]




* Referencias
- Formatos:
  - [[file:asgbd-1-instalar-oracle.html][Transparencias]] 
  - [[file:asgbd-1-instalar-oracle.pdf][PDF]]
- Creado con:
  - [[https://www.gnu.org/s/emacs/][Emacs]]
  - [[https://github.com/yjwen/org-reveal][org-reveal]]
  - [[https://www.latex-project.org/][Latex]]
