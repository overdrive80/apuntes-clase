-- Generado por Oracle SQL Developer Data Modeler 3.1.3.706
--   en:        2013-04-24 20:25:34 CEST
--   sitio:      Oracle Database 10g
--   tipo:      Oracle Database 10g



--CREATE USER PRUEBAS 
--    IDENTIFIED BY  
--    ACCOUNT UNLOCK 
--;

CREATE TABLE AVIONES 
    ( 
     NAVION NUMBER (10)  NOT NULL , 
     NOMBRE VARCHAR2 (10 BYTE) 
    ) 
        PCTFREE 10 
        PCTUSED 40 
        MAXTRANS 255 
        TABLESPACE USERS 
        LOGGING 
        STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
    ) 
;


CREATE UNIQUE INDEX PK_AVIONES ON AVIONES 
    ( 
     NAVION ASC 
    ) 
    TABLESPACE USERS 
    PCTFREE 10 
    MAXTRANS 255 
    STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT ) 
    LOGGING 
;

ALTER TABLE AVIONES 
    ADD CONSTRAINT PK_AVIONES PRIMARY KEY ( NAVION ) 
    USING INDEX PK_AVIONES ;



CREATE TABLE PARTNUMBER 
    ( 
     IDPARTNUMBER VARCHAR2 (10 BYTE)  NOT NULL , 
     NOMBRE VARCHAR2 (10 BYTE) , 
     IDENTIFICADOR NUMBER (10) 
    ) 
        PCTFREE 10 
        PCTUSED 40 
        MAXTRANS 255 
        TABLESPACE USERS 
        LOGGING 
        STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
    ) 
;


CREATE UNIQUE INDEX PK_PN ON PARTNUMBER 
    ( 
     IDPARTNUMBER ASC 
    ) 
    TABLESPACE USERS 
    PCTFREE 10 
    MAXTRANS 255 
    STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT ) 
    LOGGING 
;

ALTER TABLE PARTNUMBER 
    ADD CONSTRAINT PK_PN PRIMARY KEY ( IDPARTNUMBER ) 
    USING INDEX PK_PN ;



CREATE TABLE PIEZASCOMPUESTAS 
    ( 
     IDCOMPUESTO NUMBER (10) , 
     NAVION NUMBER (10) , 
     NOMBRE VARCHAR2 (30 BYTE) , 
     IDENTIFICADOR NUMBER (10)  NOT NULL 
    ) 
        PCTFREE 10 
        PCTUSED 40 
        MAXTRANS 255 
        TABLESPACE USERS 
        LOGGING 
        STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
    ) 
;


CREATE UNIQUE INDEX PK_PC ON PIEZASCOMPUESTAS 
    ( 
     IDENTIFICADOR ASC 
    ) 
    TABLESPACE USERS 
    PCTFREE 10 
    MAXTRANS 255 
    STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT ) 
    LOGGING 
;

ALTER TABLE PIEZASCOMPUESTAS 
    ADD CONSTRAINT PK_PC PRIMARY KEY ( IDENTIFICADOR ) 
    USING INDEX PK_PC ;



CREATE TABLE PIEZASSIMPLES 
    ( 
     IDENTIFICADOR NUMBER (10)  NOT NULL , 
     SERIALNUMBER VARCHAR2 (10 BYTE) , 
     NAVION NUMBER (10)  NOT NULL , 
     IDPARTNUMBER VARCHAR2 (10 BYTE) , 
     IDCOMPUESTO NUMBER (10) , 
     NOMBRE VARCHAR2 (10 BYTE) 
    ) 
        PCTFREE 10 
        PCTUSED 40 
        MAXTRANS 255 
        TABLESPACE USERS 
        LOGGING 
        STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
    ) 
;


CREATE UNIQUE INDEX PK_PS ON PIEZASSIMPLES 
    ( 
     IDENTIFICADOR ASC 
    ) 
    TABLESPACE USERS 
    PCTFREE 10 
    MAXTRANS 255 
    STORAGE ( 
        INITIAL 65536 
        PCTINCREASE 0 
        MINEXTENTS 1 
        MAXEXTENTS 2147483645 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT ) 
    LOGGING 
;

ALTER TABLE PIEZASSIMPLES 
    ADD CONSTRAINT PK_PS PRIMARY KEY ( IDENTIFICADOR ) 
    USING INDEX PK_PS ;




ALTER TABLE PIEZASSIMPLES 
    ADD CONSTRAINT FK2_PS FOREIGN KEY 
    ( 
     IDCOMPUESTO
    ) 
    REFERENCES PIEZASCOMPUESTAS 
    ( 
     IDENTIFICADOR
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE PIEZASSIMPLES 
    ADD CONSTRAINT FK3_PS FOREIGN KEY 
    ( 
     IDPARTNUMBER
    ) 
    REFERENCES PARTNUMBER 
    ( 
     IDPARTNUMBER
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE PIEZASCOMPUESTAS 
    ADD CONSTRAINT FK_PC FOREIGN KEY 
    ( 
     NAVION
    ) 
    REFERENCES AVIONES 
    ( 
     NAVION
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE PIEZASSIMPLES 
    ADD CONSTRAINT FK_PS FOREIGN KEY 
    ( 
     NAVION
    ) 
    REFERENCES AVIONES 
    ( 
     NAVION
    ) 
    NOT DEFERRABLE 
;

CREATE OR REPLACE VIEW AVIONES_PROFESOR AS
SELECT  NAVION PARTE_ID,NULL PARTE_PADRE,NOMBRE NOMBRE, NULL SN,NULL PN FROM AVIONES
UNION
SELECT IDENTIFICADOR PARTE_ID, IDCOMPUESTO PARTE_PADRE,NOMBRE NOMBRE,SERIALNUMBER SN,IDPARTNUMBER PN FROM PIEZASSIMPLES
WHERE IDCOMPUESTO IS NOT NULL
UNION
SELECT IDENTIFICADOR PARTE_ID, NAVION PARTE_PADRE,NOMBRE NOMBRE, SERIALNUMBER SN,IDPARTNUMBER PN FROM PIEZASSIMPLES
WHERE IDCOMPUESTO IS NULL
UNION 
SELECT IDENTIFICADOR PARTE_ID,IDCOMPUESTO  PARTE_PADRE, NOMBRE NOMBRE,NULL SN, NULL PN FROM PIEZASCOMPUESTAS
WHERE IDCOMPUESTO IS NOT NULL 
UNION
SELECT IDENTIFICADOR PARTE_ID,NAVION  PARTE_PADRE, NOMBRE NOMBRE,NULL SN, NULL PN FROM PIEZASCOMPUESTAS
WHERE IDCOMPUESTO IS NULL ;



CREATE SEQUENCE SECUENCIA_PIEZA_ID 
    INCREMENT BY 1 
    MAXVALUE 999 
    MINVALUE 1 
    CACHE 20 
    ORDER 
;

CREATE SEQUENCE SECUENCIA_SERIALNUMBER 
    INCREMENT BY 1 
    MAXVALUE 999 
    MINVALUE 1 
    CACHE 20 
    ORDER 
;

CREATE OR REPLACE TRIGGER CREACION_ID_PIEZA 
    BEFORE INSERT ON AVIONES 
    FOR EACH ROW 
begin  
   if inserting then 
      if :NEW."NAVION" is null then 
         select SECUENCIA_PIEZA_ID.nextval into :NEW."NAVION" from dual; 
      end if; 
   end if; 
end; 
/


CREATE OR REPLACE TRIGGER DISPARADOR_DE_PIEZAS_SIMPLES 
    BEFORE INSERT ON PIEZASSIMPLES 
    FOR EACH ROW 
begin  
   if inserting then 
      if :NEW."IDENTIFICADOR" is null then 
         select SECUENCIA_PIEZA_ID.nextval into :NEW."IDENTIFICADOR" from dual; 
      end if; 
   end if; 
end; 
/


CREATE OR REPLACE TRIGGER DISPARADOR_PIEZAS_COMPUESTAS 
    BEFORE INSERT ON PRUEBAS.PIEZASCOMPUESTAS 
    FOR EACH ROW 
begin  
   if inserting then 
      if :NEW."IDENTIFICADOR" is null then 
         select SECUENCIA_PIEZA_ID.nextval into :NEW."IDENTIFICADOR" from dual; 
      end if; 
   end if; 
end;
 
/


CREATE OR REPLACE TRIGGER DISPARADOR_SERIALNUMBER 
    BEFORE INSERT ON PRUEBAS.PIEZASSIMPLES 
    FOR EACH ROW 
begin  
   if inserting then 
      if :NEW."SERIALNUMBER" is null then 
         select 'SN-'||SECUENCIA_SERIALNUMBER.nextval into :NEW."SERIALNUMBER" from dual; 
      end if; 
   end if; 
end; 
/



CREATE OR REPLACE PROCEDURE BORRAR_AVION (AVION_ID IN NUMBER) AS 
ID_AVION NUMBER;
BEGIN
ID_AVION:=AVION_ID;
DELETE FROM PIEZASSIMPLES WHERE NAVION=ID_AVION;
DELETE FROM PIEZASCOMPUESTAS WHERE NAVION=ID_AVION;
DELETE FROM AVIONES WHERE NAVION=ID_AVION;
END BORRAR_AVION;
/

CREATE OR REPLACE PROCEDURE BORRAR_AVIONES  AS 
BEGIN
DELETE FROM PIEZASSIMPLES;
DELETE FROM PIEZASCOMPUESTAS;
DELETE FROM AVIONES;
END BORRAR_AVIONES;
/


CREATE OR REPLACE PROCEDURE COPIA_PIEZA(ID_SIMPLE IN NUMBER,ID_COPIA_SIMPLES IN NUMBER) AS 
PARTE_EXISTE PIEZASSIMPLES%ROWTYPE;
PARTE_YA_CREADA NUMBER;
BEGIN
FOR PARTE_EXISTE IN (SELECT * FROM PIEZASSIMPLES WHERE IDCOMPUESTO=ID_SIMPLE
                  UNION
                  SELECT * FROM PIEZASSIMPLES WHERE NAVION=ID_SIMPLE)
LOOP
  INSERT INTO PIEZASSIMPLES(navion,NOMBRE) VALUES(ID_COPIA_SIMPLES,PARTE_EXISTE.NOMBRE);
  select SECUENCIA_PIEZA_ID.currval into PARTE_YA_CREADA from dual;
    COPIA_PIEZA(PARTE_EXISTE.IDENTIFICADOR,PARTE_YA_CREADA);
  end loop;
END COPIA_PIEZA;
/

CREATE OR REPLACE PROCEDURE COPIAR_AVION (AVION_ID IN NUMBER  , COPIA_AVION_ID IN NUMBER  ) AS 
AVION_EXISTENTE AVIONES%ROWTYPE;
BEGIN
  SELECT * INTO AVION_EXISTENTE FROM aviones WHERE NAVION = AVION_ID;
  INSERT INTO aviones(NAVION,NOMBRE) VALUES(copia_avion_id,AVION_EXISTENTE.nombre);
  COPIA_PIEZA(AVION_ID, COPIA_AVION_ID);
END COPIAR_AVION;
/





CREATE OR REPLACE PROCEDURE CREAR_AVION (AVION_ID IN NUMBER) AS 
I NUMBER:=avion_id;
BEGIN
INSERT INTO AVIONES(NAVION,NOMBRE) VALUES(I,'AVION1
');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10001',I,'PN-001','FUSELAJE');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10002',I,'PN-002','Asiento 1');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10003',I,'PN-003','Controles');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10004',I,'PN-002','Asiento 2');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10005',I,'PN-002','Asiento 3');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10006',I,'PN-004','Motor 1');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10007',I,'PN-004','Motor 2');
INSERT INTO piezascompuestas(idcompuesto,navion,nombre) VALUES(1,I,'Cabina');
INSERT INTO piezascompuestas(idcompuesto,navion,nombre) VALUES(10,I,'Asiento piloto');
END CREAR_AVION;
/

CREATE OR REPLACE PROCEDURE INTENTA_CREAR_AVION_MASDE10 (AVION_ID IN NUMBER) AS 
I NUMBER:=avion_id;
BEGIN
INSERT INTO AVIONES(NAVION,NOMBRE) VALUES(I,'AVION3');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10019',I,'PN-001','FUSELAJE');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10020',I,'PN-002','Asiento 11');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10021',I,'PN-003','Controles');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10022',I,'PN-002','Asiento 12');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10023',I,'PN-003','Controles');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10024',I,'PN-004','Motor 5');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10025',I,'PN-004','Motor 6');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10026',I,'PN-004','Motor 7');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10027',I,'PN-004','Motor 8');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10028',I,'PN-005','Caja negra');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10029',I,'PN-006','Gps');
INSERT INTO piezascompuestas(idcompuesto,navion,nombre) VALUES(1,I,'Cabina');
INSERT INTO piezascompuestas(idcompuesto,navion,nombre) VALUES(10,I,'Asiento piloto');
INSERT INTO piezascompuestas(idcompuesto,navion,nombre) VALUES(11,I,'Asiento piloto');
END INTENTA_CREAR_AVION_MASDE10;
/

CREATE OR REPLACE PROCEDURE INTENTA_CREAR_AVION_MASDE4 (AVION_ID IN NUMBER) AS 
I NUMBER:=avion_id;
BEGIN
INSERT INTO AVIONES(NAVION,NOMBRE) VALUES(I,'AVION2');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10008',I,'PN-001','FUSELAJE');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10009',I,'PN-002','Asiento 4');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10010',I,'PN-003','Controles');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10011',I,'PN-002','Asiento 5');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10012',I,'PN-002','Asiento 6');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10013',I,'PN-002','Asiento 7');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10014',I,'PN-002','Asiento 8');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10015',I,'PN-002','Asiento 9');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10016',I,'PN-002','Asiento 10');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10017',I,'PN-004','Motor 3');
INSERT INTO piezassimples(SERIALNUMBER,NAVION,IDPARTNUMBER,NOMBRE) VALUES('SN-10018',I,'PN-004','Motor 4');
INSERT INTO piezascompuestas(idcompuesto,navion,nombre) VALUES(1,I,'Cabina');
INSERT INTO piezascompuestas(idcompuesto,navion,nombre) VALUES(10,I,'Asiento piloto');
END INTENTA_CREAR_AVION_MASDE4;
/

CREATE OR REPLACE FUNCTION COMPRUEBA_AVION(ID number) RETURN varchar2 AS 
NUMEROPIEZAS NUMBER(10);
ID_NO NUMBER(10):=ID;
EX EXCEPTION;
EX2 EXCEPTION;
  BEGIN
    SELECT COUNT(identificador) INTO NUMEROPIEZAS FROM piezassimples; 
    IF NUMEROPIEZAS>10 THEN
      RAISE EX;
    END IF;
    SELECT NAVION INTO ID_NO FROM aviones WHERE navion=ID;
    IF ID_NO<>ID THEN
      RAISE EX2;
    END IF ;
    EXCEPTION 
      WHEN EX2 THEN
         DBMS_OUTPUT.PUT_LINE('DEMASIADAS PIEZAS');
    RETURN numeropiezas;
  END;
/

CREATE OR REPLACE FUNCTION COMPRUEBA_PIEZA(ID number) RETURN VARCHAR2 AS 
NUMEROPIEZAS NUMBER(10);
IDAVION NUMBER(10);
EX exception;
BEGIN
select count(identificador) INTO NUMEROPIEZAS from piezascompuestas WHERE numeropiezas=ID;
  IF NUMEROPIEZAS>4 THEN
  RAISE EX;
  END IF;
  IF IDAVION <> id THEN
    RAISE EX;
  END IF;
  RETURN NUMEROPIEZAS;
  EXCEPTION WHEN EX THEN
  DBMS_OUTPUT.PUT_LINE('ERROR');
END;
/


-- Informe de Resumen de Oracle SQL Developer Data Modeler: 
-- 
-- CREATE TABLE                             4
-- CREATE INDEX                             4
-- ALTER TABLE                              8
-- CREATE VIEW                              1
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         7
-- CREATE FUNCTION                          2
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE STRUCTURED TYPE                   0
-- CREATE COLLECTION TYPE                   0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          2
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
